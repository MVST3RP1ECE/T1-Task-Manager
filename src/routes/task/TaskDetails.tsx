import { Context } from '@/App';
import { Button } from '@/components/ui/button';
import {
    Dialog, DialogClose, DialogContent, DialogDescription,
    DialogFooter, DialogHeader, DialogTitle, DialogTrigger
} from '@/components/ui/dialog';
import { Label } from '@/components/ui/label';
import {
    Select, SelectContent, SelectGroup, SelectItem,
    SelectLabel, SelectTrigger, SelectValue
} from '@/components/ui/select';
import { Textarea } from '@/components/ui/textarea';
import generateTaskName, { getRandomLetterRecursive } from '@/utils/generateTaskName';
import React, { useContext, useEffect } from 'react';
import { useParams } from 'react-router';
import { useForm, Controller } from "react-hook-form";
import { Link } from 'react-router-dom';

function TaskDetails() {
    const { id } = useParams();
    const letter = getRandomLetterRecursive();
    const { state, dispatch } = useContext(Context);

    const {
        register,
        handleSubmit,
        control,
        setValue,
        formState: { errors }
    } = useForm({
        defaultValues: {
            'id': `${id}`,
            'header': '',
            'description': '',
            'priority': '',
            'category': '',
            'status': '',
        }
    });

    // –ó–∞–¥–∞–ª –∑–Ω–∞—á–µ–Ω–∏–µ header –≤—Ä—É—á–Ω—É—é
    useEffect(() => {
        setValue('header', `${letter}-${id}`);
    }, []);

    const onSubmit = (data: any) => {
        console.log('Form submitted:', data);
        return dispatch({ type: "ADD_TASK", payload: data });
        // ctx.push(data);
    };

    return (
        <section className="h-screen w-screen flex flex-col box-border items-center justify-center bg-neutral-300 overflow-auto">
            <Dialog>
                <form onSubmit={handleSubmit(onSubmit)}>
                    <DialogTrigger asChild>
                        <Button className='hover:cursor-pointer' variant="outline">–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É</Button>
                    </DialogTrigger>
                    <DialogContent className="sm:max-w-[425px]">
                        <DialogHeader>
                            <DialogTitle>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏</DialogTitle>
                            <DialogDescription>
                                –¢—É—Ç –º–æ–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–¥–∞—á—É
                            </DialogDescription>
                        </DialogHeader>
                        <div className="grid gap-4">
                            <div className="grid gap-3">

                                {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ */}
                                <Label htmlFor='header'>–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏</Label>
                                <Controller
                                    name="header"
                                    control={control}
                                    render={({ field }) => (
                                        <Textarea
                                            {...field}
                                            id='header'
                                            maxLength={25}
                                            disabled
                                        />
                                    )}
                                />

                                {/* –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ */}
                                <Label htmlFor='description'>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏</Label>
                                <Controller
                                    name="description"
                                    control={control}
                                    render={({ field }) => (
                                        <Textarea
                                            {...field}
                                            placeholder='–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏'
                                            id='description'
                                            maxLength={250}
                                        />
                                    )}
                                />

                                {/* –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏ */}
                                <Label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏</Label>
                                <Controller
                                    name="priority"
                                    control={control}
                                    render={({ field }) => (
                                        <Select onValueChange={field.onChange} value={field.value}>
                                            <SelectTrigger className="w-[200px]">
                                                <SelectValue placeholder="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç" />
                                            </SelectTrigger>
                                            <SelectContent>
                                                <SelectGroup>
                                                    <SelectLabel>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</SelectLabel>
                                                    <SelectItem value="Low">üü¢ Low</SelectItem>
                                                    <SelectItem value="Medium">üü° Medium</SelectItem>
                                                    <SelectItem value="High">üî¥ High</SelectItem>
                                                </SelectGroup>
                                            </SelectContent>
                                        </Select>
                                    )}
                                />

                                {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏ */}
                                <Label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏</Label>
                                <Controller
                                    name="category"
                                    control={control}
                                    render={({ field }) => (
                                        <Select onValueChange={field.onChange} value={field.value}>
                                            <SelectTrigger className="w-[200px]">
                                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é" />
                                            </SelectTrigger>
                                            <SelectContent>
                                                <SelectGroup>
                                                    <SelectLabel>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</SelectLabel>
                                                    <SelectItem value="Bug">üêõ Bug</SelectItem>
                                                    <SelectItem value="Feature">‚ú® Feature</SelectItem>
                                                    <SelectItem value="Documentation">üìö Documentation</SelectItem>
                                                    <SelectItem value="Refactor">‚ôªÔ∏è Refactor</SelectItem>
                                                    <SelectItem value="Test">üõ†Ô∏è Test</SelectItem>
                                                </SelectGroup>
                                            </SelectContent>
                                        </Select>
                                    )}
                                />

                                {/* –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ */}
                                <Label>–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏</Label>
                                <Controller
                                    name="status"
                                    control={control}
                                    render={({ field }) => (
                                        <Select onValueChange={field.onChange} value={field.value}>
                                            <SelectTrigger className="w-[200px]">
                                                <SelectValue placeholder="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å" />
                                            </SelectTrigger>
                                            <SelectContent>
                                                <SelectGroup>
                                                    <SelectLabel>–°—Ç–∞—Ç—É—Å</SelectLabel>
                                                    <SelectItem value="To Do">üìã To Do</SelectItem>
                                                    <SelectItem value="In Progress">üîÑ In Progress</SelectItem>
                                                    <SelectItem value="Done">‚úîÔ∏è Done</SelectItem>
                                                </SelectGroup>
                                            </SelectContent>
                                        </Select>
                                    )}
                                />
                            </div>
                        </div>
                        <DialogFooter>
                            <DialogClose asChild>
                                <Button className='hover:cursor-pointer' variant="outline">–û—Ç–º–µ–Ω–∏—Ç—å</Button>
                            </DialogClose>
                            <Button className='hover:cursor-pointer' type="submit" onClick={handleSubmit(onSubmit)}>
                                <Link to={"/"}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Link>
                            </Button>
                        </DialogFooter>
                    </DialogContent>
                </form>
            </Dialog>
            <div>TaskDetails #{id}</div>
        </section>
    );
}

export default TaskDetails;
